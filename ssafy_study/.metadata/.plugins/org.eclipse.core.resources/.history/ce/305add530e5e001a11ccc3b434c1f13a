package study0301;

import java.util.PriorityQueue;
import java.util.Scanner;

public class Solution_모의_2382_미생물격리 {

	static int N, M, K;
	static int[] dy = { -1, 1, 0, 0 };
	static int[] dx = { 0, 0, -1, 1 };
	static PriorityQueue<Bug> pq = new PriorityQueue<>();

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		for (int t = 1; t <= T; t++) {
			N = sc.nextInt();
			M = sc.nextInt();
			K = sc.nextInt();
			for (int i = 0; i < K; i++) {
				pq.add(new Bug(sc.nextInt(), sc.nextInt(), sc.nextInt(), sc.nextInt()));
			}
		}
	}

	static void move() {
		PriorityQueue<Bug> same = new PriorityQueue<>();
		int size = pq.size();
		Bug prev = null;
		for (int s = 0; s < size; s++) {
			Bug cur = pq.poll();
			if (cur.y == prev.y && cur.x == prev.x) {
				same.add(cur);
			} else {
				int y=0, x=0, d=0;
				int cnt = 0;
				if (!same.isEmpty()) {
					while (!same.isEmpty()) {
						Bug b = same.poll();
						y = b.y;
						x = b.x;
						d = b.d;
						cnt += b.c;
					}
					Bug sumb = new Bug(y, x, cnt, d) 
					pq.add(sumb);
					prev = sumb;
				} else {
					pq.add(new Bug(cur.y + dy[cur.d], cur.x + dx[cur.d], cur.c, cur.d));
					prev = cur;
				}
			}
		}
	}

	static class Bug implements Comparable<Bug> {
		int y, x, d;
		long c;

		public Bug(int y, int x, long c, int d) {
			super();
			this.y = y;
			this.x = x;
			this.c = c;
			this.d = d;
		}

		@Override
		public int compareTo(Bug o) {
			if (this.y > o.y)
				return 1;
			else if (this.y < o.y)
				return -1;
			else {
				if (this.x > o.x)
					return 1;
				else if (this.x < o.x)
					return -1;
				else {
					if (this.c > o.c)
						return 1;
					else if (this.c < o.c)
						return -1;
					else
						return 0;
				}
			}
		}

	}

}
