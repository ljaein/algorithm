package study0501;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;

public class Main_2665_미로만들기 {

	static int N;
	static int[][] map;
	static boolean[][][] visit;
	static int[] dy = {-1,0,1,0};
	static int[] dx = {0,1,0,-1};
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(br.readLine());
		map = new int[N][N];
		visit = new boolean[N][N][2];
		for (int i = 0; i < N; i++) {
			char[] c = br.readLine().toCharArray();
			for (int j = 0; j < N; j++) {
				map[i][j] = c[j] -'0';
			}
		}
		
	}
	
	static void bfs(){
		Queue<Point> q = new LinkedList<>();
		visit[0][0][0]=true;
		q.add(new Point(0,0,0));
		while(!q.isEmpty()){
			Point cur = q.poll();
			for(int d=0;d<4;d++){
				int ny = cur.y+dy[d];
				int nx = cur.x+dx[d];
				if(ny<0||nx<0||ny>=N||nx>=N||visit[ny][nx][])
			}
		}
	}

	static class Point{
		int y, x, b;

		public Point(int y, int x, int b) {
			super();
			this.y = y;
			this.x = x;
			this.b = b;
		}
		
	}
}
