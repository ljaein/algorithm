package study0204;

import java.util.Scanner;

public class Main_17472_다리만들기2 {

	static int N, M;
	static int[][] map;
	static boolean[][] visited;
	static int[] dy = { -1, 0, 1, 0 };
	static int[] dx = { 0, 1, 0, -1 };

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt();
		M = sc.nextInt();
		map = new int[N][M];
		visited = new boolean[N][M];
		int num = 0;
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < M; j++) {
				map[i][j] = sc.nextInt();
				if (map[i][j] == 1 && !visited[i][j]) {
					System.out.println(i+" "+j);
					visited[i][j] = true;
					dfs(i, j, ++num);
					System.out.println(num);
				}
			}
		}
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < M; j++) {
				System.out.print(map[i][j] + " ");
			}
			System.out.println();
		}
	}

	public static void dfs(int y, int x, int n) {
		for (int d = 0; d < 4; d++) {
			int ny = y + dy[d];
			int nx = x + dx[d];
			if (ny < 0 || nx < 0 || ny >= N || nx >= M || visited[ny][nx])
				continue;
			if (map[ny][nx] == 1) {
				System.out.println("in"+ny+" "+nx);
				visited[ny][nx] = true;
				map[ny][nx] = n;
				dfs(ny, nx, n);
			}
		}
	}

}
