package study0404;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main_1726_로봇 {

	static int M, N;
	static int[][] map;
	static int sy, sx, sd, ey, ex, ed;
	static boolean[][] visit;
	static int[] dy = { 0, 0, 1, -1 };
	static int[] dx = { 1, -1, 0, 0 };

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		M = sc.nextInt();
		N = sc.nextInt();
		map = new int[M][N];
		visit = new boolean[M][N];
		for (int i = 0; i < M; i++) {
			for (int j = 0; j < N; j++) {
				map[i][j] = sc.nextInt();
			}
		}
		sy = sc.nextInt();
		sx = sc.nextInt();
		sd = sc.nextInt();
		ey = sc.nextInt();
		ex = sc.nextInt();
		ed = sc.nextInt();

	}

	static void bfs() {
		Queue<Point> q = new LinkedList<>();
		visit[sy][sx] = true;
		q.add(new Point(sy, sx, 0));
		while (!q.isEmpty()) {
			Point cur = q.poll();
			for (int d = 0; d < 4; d++) {
				int ny = cur.y + dy[d];
				int nx = cur.x + dx[d];
				if (ny < 0 || nx < 0 || ny >= M || nx >= N || visit[ny][nx])
					continue;
				visit[ny][nx] = true;

			}
		}
	}

	static class Point {
		int y, x, d, cnt;

		public Point(int y, int x, int d, int cnt) {
			super();
			this.y = y;
			this.x = x;
			this.d = d;
			this.cnt = cnt;
		}

	}

}
