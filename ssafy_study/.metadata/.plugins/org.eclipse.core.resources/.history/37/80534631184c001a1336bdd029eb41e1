package study0202;

import java.util.Arrays;
import java.util.Scanner;

public class Main_16637_괄호추가하기 {

	static int N, sum, max;
	static char[] sik;

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt();
		sik = sc.next().toCharArray();
		for (int r = 1; r <= (N / 2 + 1) / 2; r++) {
			int[] sel = new int[r];
			dfs(1, 0, r, sel);
		}
		System.out.println(max);
	}

	public static void dfs(int start, int cnt, int r, int[] sel) {
		if (cnt == r) {
			calc(sel);
			return;
		}
		for (int i = start; i < N - 1; i = i + 2) {
			sel[cnt] = i;
			dfs(i + 4, cnt + 1, r, sel);
		}
	}

	public static void calc(int[] sel) {
		StringBuffer nsik = new StringBuffer(String.valueOf(sik));
		for (int i = 0; i < sel.length; i++) {
			int a = (int) nsik.charAt(sel[i] - 1);
			int b = (int) nsik.charAt(sel[i] + 1);
			char c = nsik.charAt(sel[i]);
			nsik.replace(sel[i] - 1, sel[i] + 1, String.valueOf(calc(a, b, c)));
		}
		while(nsik.length()!=1){
			int a = (int) nsik.charAt(0);
			int b = (int) nsik.charAt(2);
			char c = nsik.charAt(1);
			nsik.replace(0, 2, String.valueOf(calc(a, b, c)));
		}
	}

	public static int calc(int a, int b, char c) {
		if (c == '+') {
			return a + b;
		} else if (c == '-') {
			return a - b;
		} else {
			return a * b;
		}
	}

}
