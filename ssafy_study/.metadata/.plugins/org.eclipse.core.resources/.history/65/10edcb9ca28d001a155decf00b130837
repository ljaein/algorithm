import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;
import java.util.StringTokenizer;

public class Algo2_대전_6반_이재인 {

	static int T, R, C, N;
	static char[][] map;

	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(System.in);
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = null;
		StringBuilder sb = new StringBuilder();
		T = Integer.parseInt(br.readLine());
		for (int t = 1; t <= T; t++) {
			st = new StringTokenizer(br.readLine());
			R = Integer.parseInt(st.nextToken());
			C = Integer.parseInt(st.nextToken());
			map = new char[R][C];
			for (int i = 0; i < R; i++) {
				map[i] = br.readLine().toCharArray();
			}
			N = Integer.parseInt(br.readLine());
			st = new StringTokenizer(br.readLine());
			for (int i = 0; i < N; i++) {
				int col = Integer.parseInt(st.nextToken()) - 1;
				roll(0, col);
			}
			
			sb.append("# ").append(t).append("\n");
			for (int i = 0; i < R; i++) {
				for (int j = 0; j < C; j++) {
					sb.append(map[i][j]);
				}
				sb.append("\n");
			}
		}
		System.out.println(sb);

	}

	static void roll(int y, int x) {
		int ny = y + 1;
		int nx = x;
		if (ny == R || map[ny][nx] == 'X') {
			map[y][x] = 'O';
			return;
		} else if (map[ny][nx] == '.') {
			roll(ny, nx);
		} else if (map[ny][nx] == 'O') {
			if (x - 1 >= 0 && nx - 1 >= 0 && map[y][x - 1] == '.' && map[ny][nx - 1] == '.') {
				roll(ny, nx - 1);
			} else {
				if (x + 1 < C && nx + 1 < C && map[y][x + 1] == '.' && map[ny][nx + 1] == '.') {
					roll(ny, nx + 1);
				} else {
					map[y][x] = 'O';
					return;
				}
			}
		}

	}

}
