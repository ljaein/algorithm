package study0604;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main_19237_어른상어 {

	static int N, M, k;
	static Shark[][] map;
	static int[][][] pd;
	static Shark[] shark;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		k = Integer.parseInt(st.nextToken());
		map = new Shark[N][N];
		shark = new Shark[M + 1];
		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j = 0; j < N; j++) {
				int num = Integer.parseInt(st.nextToken());
				if (num != 0) {
					shark[num] = new Shark(num, k, 0, true);
					map[i][j] = shark[num];
				}
			}
		}
		st = new StringTokenizer(br.readLine());
		for (int i = 1; i <= M; i++) {
			shark[i].d = Integer.parseInt(st.nextToken());
		}

	}

	static class Shark {
		int n, t, d;
		boolean isin;

		public Shark(int n, int t, int d, boolean isin) {
			super();
			this.n = n;
			this.t = t;
			this.d = d;
			this.isin = isin;
		}

	}

}
