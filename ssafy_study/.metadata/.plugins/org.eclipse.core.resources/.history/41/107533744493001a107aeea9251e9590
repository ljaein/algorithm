package study0502;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main_9328_열쇠 {

	static int T, h, w;
	static char[][] map;
	static int[] dy = {-1,0,1,0};
	static int[] dx = {0,1,0,-1};

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		T = sc.nextInt();
		// for(int t=1;t<=T;t++){
		h = sc.nextInt();
		w = sc.nextInt();
		map = new char[h + 2][w + 2];
		for (int i = 0; i < h + 2; i++) {
			for (int j = 0; j < w + 2; j++) {
				if (i == 0 || j == 0 || i == h + 1 || j == w + 1)
					map[i][j] = '.';
				else
					map[i][j] = sc.next().charAt(0);
			}
		}
		
		// }

	}
	
	static void bfs(){
		Queue<Point> q = new LinkedList<>();
		q.add(new Point(0,0,0));
		while(!q.isEmpty()){
			Point cur = q.poll();
			for(int d= 0;d<4;d++){
				int ny = cur.y+dy[d];
				int nx = cur.x+dx[d];
				if(ny<0||nx<0|ny>=h+2||nx>=w+2||map[ny][nx]=='*')
					continue;
				if(map[ny][nx]=='.'){
					q.add(new Point(ny,nx,cur.cnt));
				}else if(map[ny][nx]=='$'){
					q.add(new Point(ny,nx,cur.cnt+1));
				}
			}
		}
	}

	static class Point{
		int y, x, cnt;

		public Point(int y, int x, int cnt) {
			super();
			this.y = y;
			this.x = x;
			this.cnt = cnt;
		}
		
		
	}
}
