package study0403;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main_3190_ë±€ {

	static int N, K, L, d, yhead, xhead;
	static int[][] map;
	static int[] rtime;
	static char[] rdir;
	static int[] dy = { 0, 1, 0, -1 };
	static int[] dx = { 1, 0, -1, 0 };
	static Queue<Point> q = new LinkedList<>();

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt();
		map = new int[N][N];
		K = sc.nextInt();
		for (int i = 0; i < K; i++) {
			int y = sc.nextInt() - 1;
			int x = sc.nextInt() - 1;
			map[y][x] = -1;
		}
		L = sc.nextInt();
		for (int i = 0; i < L; i++) {
			rtime[i] = sc.nextInt();
			rdir[i] = sc.next().charAt(0);
		}
		map[0][0] = 1;
		q.add(new Point(0, 0));
		while (true) {

		}
	}

	static void go() {
		while (true) {
			int ny = yhead + dy[d];
			int nx = xhead + dx[d];
			if (ny < 0 || nx < 0 || ny >= N || nx >= N || map[ny][nx] == 1)
				return;
			if (map[ny][nx] == -1) {
				map[ny][nx] = 1;
			} else {

			}
		}
	}

	static class Point {
		int y, x;

		public Point(int y, int x) {
			super();
			this.y = y;
			this.x = x;
		}

	}

}
