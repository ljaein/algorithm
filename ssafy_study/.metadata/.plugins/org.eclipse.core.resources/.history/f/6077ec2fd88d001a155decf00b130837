package study0501;

import java.util.Scanner;

public class Main_2933_미네랄 {

	static int R, C;
	static char[][] map;
	static int[][] nmap;
	static int N;
	static boolean[][] visit;
	static int[] dy = { -1, 0, 1, 0 };
	static int[] dx = { 0, 1, 0, -1 };

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		R = sc.nextInt();
		C = sc.nextInt();
		map = new char[R][C];
		for (int i = 0; i < R; i++) {
			map[i] = sc.next().toCharArray();
		}
		N = sc.nextInt();
		int dir = 0;
		for (int n = 0; n < N; n++) {
			int row = sc.nextInt();
			remove(R - row, dir);
			nmap = new int[R][C];
			visit = new boolean[R][C];
			int num = 1;
			for (int i = R - 1; i >= 0; i--) {
				for (int j = 0; j < C; j++) {
					if (map[i][j] == 'x' && !visit[i][j]) {
						if (i == R - 1)
							dfs(i, j, -1);
						else
							dfs(i, j, num++);
					}
				}
			}
			print();
			dir = dir == 0 ? 1 : 0;
		}

	}

	static void print() {
		for (int i = 0; i < R; i++) {
			for (int j = 0; j < C; j++) {
				System.out.print(map[i][j] + " ");
			}
			System.out.println();
		}
		System.out.println();
	}

	static void dfs(int y, int x, int num) {
		for (int d = 0; d < 4; d++) {
			int ny = y + dy[d];
			int nx = x + dx[d];
			if (ny < 0 || nx < 0 || ny >= R || nx >= C || visit[ny][nx] || map[ny][nx] == '.')
				continue;
			visit[ny][nx] = true;
			nmap[ny][nx] = num;
			dfs(ny, nx, num);
		}
	}

	static void check() {
		for (int i = R - 1; i >= 0; i--) {
			for (int j = 0; j < C; j++) {
				if (nmap[i][j] == 'x') {

				}
			}
		}
	}

	static void remove(int r, int dir) {
		if (dir == 0) {
			for (int i = 0; i < C; i++) {
				if (map[r][i] == 'x') {
					map[r][i] = '.';
					return;
				}
			}
		} else {
			for (int i = C - 1; i >= 0; i--) {
				if (map[r][i] == 'x') {
					map[r][i] = '.';
					return;
				}
			}
		}
	}

	static class Point {
		int y, x;

		public Point(int y, int x) {
			super();
			this.y = y;
			this.x = x;
		}

	}

}
