package study0501;

import java.util.PriorityQueue;
import java.util.Scanner;

public class Main_6118_숨바꼭질 {

	static int N, M;
	static int[][] map;
	static PriorityQueue<Home> pq = new PriorityQueue<>();

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt();
		M = sc.nextInt();
		map = new int[N][N];
		for (int i = 0; i < M; i++) {
			int A_i = sc.nextInt();
			int B_i = sc.nextInt();
			map[A_i][B_i] = 1;
			map[B_i][A_i] = 1;
		}
		dfs(0, 1);
	}

	static void dfs(int v, int cnt) {
		for (int j = 0; j < N; j++) {
			if (map[v][j] == 1) {
				pq.add(new Home(j, cnt));
				dfs(j, cnt + 1);
			}
		}
	}

	static class Home implements Comparable<Home> {
		int h, d;

		public Home(int h, int d) {
			super();
			this.h = h;
			this.d = d;
		}

		@Override
		public int compareTo(Home o) {
			if (this.d > o.d)
				return -1;
			else if (this.d < o.d)
				return 1;
			else {
				if (this.h < o.h)
					return -1;
				else
					return 1;
			}
		}

	}
}
