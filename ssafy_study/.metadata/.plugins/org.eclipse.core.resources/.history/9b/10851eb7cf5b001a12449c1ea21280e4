package study0204;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;


public class Main_16235_나무재테크 {

	static int N,M,K;
	static int[][] A;
	static int[][] nut;
	static LinkedList<Tree> tree;
	
	public static class C implements Comparator<Tree>{

		@Override
		public int compare(Tree t1, Tree t2) {
			if(t1.a>t2.a)
				return 1;
			else
				return -1;
		}
		
	}
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine()," ");
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		A = new int[N][N];//추가할 양분
		for(int i=0;i<N;i++){
			st = new StringTokenizer(br.readLine()," ");
			for(int j=0;j<N;j++){
				A[i][j]= Integer.parseInt(st.nextToken());
			}
		}
		tree = new LinkedList<>();
		for(int i=0;i<M;i++){
			st = new StringTokenizer(br.readLine()," ");
			tree.add(new Tree(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken())));
		}
		tree.sort(new C());
		nut = new int[N][N]; //현재 양분
		for(int i=0;i<N;i++){
			for(int j=0;j<N;j++){
				nut[i][j]=5;
			}
		}
		
		
	}
	
	public static void year(){
		Queue<Tree> die = new LinkedList<>();
		//봄
		for(int i=0;i<tree.size();i++){
			Tree cur = tree.get(i);
			if(cur.a>=nut[cur.y][cur.x]){
				nut[cur.y][cur.x]-=cur.a;
				cur.a+=1;
			}else{
				die.add(tree.remove(i));
			}
		}
		//여름
		
	}
	
	static class Tree{
		int y, x, a;

		public Tree(int y, int x, int a) {
			super();
			this.y = y;
			this.x = x;
			this.a = a;
		}
		
	}

}
