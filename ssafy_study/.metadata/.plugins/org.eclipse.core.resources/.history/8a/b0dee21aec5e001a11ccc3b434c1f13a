package study0301;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Solution_D5_7396_종구의딸이름짓기 {

	static int N, M;
	static char[][] map;
	static char[] ans;
	static boolean[][] visited;
	static int[] dy = { 0, 1 };
	static int[] dx = { 1, 0 };

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());
		for (int t = 1; t <= T; t++) {
			StringTokenizer st = new StringTokenizer(br.readLine(), " ");
			N = Integer.parseInt(st.nextToken());
			M = Integer.parseInt(st.nextToken());
			map = new char[N][M];
			visited = new boolean[N][M];
			for (int i = 0; i < N; i++) {
				map[i] = br.readLine().toCharArray();
			}
			ans = new char[N + M - 1];
			Arrays.fill(ans, 'z');
			bfs();
			int len = N+M-1;
			for(int i=0;i<len;i++){
				System.out.print(ans[i]);
			}
			System.out.println();

		}

	}

	static void bfs() {
		Queue<Point> q = new LinkedList<>();
		q.add(new Point(0, 0, 0));
		while (!q.isEmpty()) {
			int size = q.size();
			for (int s = 0; s < size; s++) {
				Point cur = q.poll();
				if (ans[cur.l] >= map[cur.y][cur.x]) {
					ans[cur.l] = map[cur.y][cur.x];
				} else {
					break;
				}
				for (int d = 0; d < 2; d++) {
					int y = cur.y + dy[d];
					int x = cur.x + dx[d];
					if (y < 0 || x < 0 || y >= N || x >= M || visited[y][x])
						continue;
					visited[y][x] = true;
					q.add(new Point(y, x, cur.l + 1));
				}
			}
		}
	}

	static class Point {
		int y, x, l;

		public Point(int y, int x, int l) {
			super();
			this.y = y;
			this.x = x;
			this.l = l;
		}

	}

}
